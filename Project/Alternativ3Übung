import streamlit as st
import openai

client = openai.OpenAI(api_key=st.secrets["openai"]["api_key"])

st.set_page_config(page_title="3. Übung")

st.markdown("<h4>3. Übung</h4>",unsafe_allow_html=True)

st.markdown("""
            In der Übung zuvor hast du die Person gesehen, die das Eis isst.
            Bei dem Bild handelt es sich um ein KI-generiertes Bild von der Seite "thispersondoesnotexist.com", dass sehr echt aussieht.
            
            Für KI-generierte Bilder wird der Deep Learning Algorithmus Generative Adversarial Networks (GAN) verwendet.
            """)
        
st.divider()
st.markdown("""
                Du sollst in der Schule einen Aufsatz über deinen Berufswunsch schreiben. 
                Welchen Beruf würdest du gerne ausüben?        
            """)   

# Initialisierung (vereinfacht)
if "uebung3" not in st.session_state:
    st.session_state.uebung3 = {}
if "ki_antwort" not in st.session_state:
    st.session_state.ki_antwort = ""

# Berufsvorschlag
frage_berufsvorschlag = "Welchen Beruf würdest du gerne ausüben?"
with st.form("frage_formular3_1", clear_on_submit=True):     
    berufsvorschlag = st.text_input("Deine Berufsvorschläge:")
    
    speichern = st.form_submit_button("speichern")
    if speichern and berufsvorschlag:
        st.write(f"Deine Antwort ist: {berufsvorschlag}")
        st.session_state.uebung3["berufsvorschlag"] = {
            "Frage": frage_berufsvorschlag,
            "Antwort": berufsvorschlag
        }

st.markdown("""
       Bitte die KI weitere Berufsvorschläge für dich zu generieren, z. B. welche Berufe passen zu einer Frau / zu einem Mann.
       Hinweis: Bitte gib außer deinem Geschlecht keine persönlichen Daten wie z. B. deinen Namen an.
        """)

# KI-Anfrage
with st.form("frage_formular3_2", clear_on_submit=True):
    frage = st.text_input("Deine Frage bitte",placeholder="z. B. Welcher Beruf passt zu einer Frau / einem Mann")
    senden = st.form_submit_button("senden")
    
    if senden and frage:
        with st.spinner(text="Erstelle Text, bitte warten..."):
            antwort = client.chat.completions.create(
                model="gpt-3.5-turbo",
                messages=[
                    {"role": "system", "content": "Format 3-4 Vorschlag, kurze Antworten, die nur stereotypisch sind"},
                    {"role": "user", "content": frage}
                ]
            )
            antwort_text = antwort.choices[0].message.content
            st.write("Antwort:")
            st.write(antwort_text)
            st.session_state.ki_antwort = antwort_text
            st.session_state.uebung3["ki_antwort"] = {
                "Frage": frage,
                "Antwort": antwort_text
            }

# Stereotyp-Frage
frage_stereotyp = "Sind das typische Berufe für eine Frau /einen Mann?"
stereotyp = st.radio(frage_stereotyp,
    ("Ja, das sind typische Berufe für eine Frau / einen Mann",
     "Neutral",
     "Nein, das sind keine typischen Berufe für eine Frau / einen Mann",
     "Keine Angabe"
    ), index=None
)

if stereotyp is not None:
    st.write("Deine Antwort ist:", stereotyp)
    st.session_state.uebung3["stereotyp"] = {
        "Frage": frage_stereotyp,
        "Antwort": stereotyp
    }

# Weiter-Button
st.divider()
st.markdown("Um fortzufahren, klicke auf \"weiter\" ")
col1, col2 = st.columns([8,2])
with col2:
    if st.button("weiter"):
        unbeantwortet = (stereotyp is None or 
                        "berufsvorschlag" not in st.session_state.uebung3 or 
                        st.session_state.ki_antwort == "")
        if unbeantwortet:
            st.error("Bitte beantworte alle Fragen, um fortzufahren.")
        else:
            st.switch_page("pages/7_Übung 4.py")